terraform {
  required_providers {
    aws = {
      source = "hashicorp/aws"
      # version = "~> 5.0"
    }
  }
}

resource "aws_security_group" "module" {
  name        = "${var.env}-security group for ${var.projectname}"
  description = var.description
  vpc_id      = var.vpc_id

  #================== Simple rules IPv4 ======================  

  dynamic "ingress" {
    for_each = var.allow_ingress_ports_tcp
    content {
      protocol         = "TCP"
      description      = "Rule generated by dynamic terraform (simple mode)"
      cidr_blocks      = ["0.0.0.0/0"]
      ipv6_cidr_blocks = var.ipv6_dualstack ? ["::/0"] : null
      from_port        = ingress.value
      to_port          = ingress.value
    }
  }

  dynamic "ingress" {
    for_each = var.allow_ingress_ports_udp
    content {
      protocol         = "UDP"
      description      = "Rule generated by dynamic terraform (simple mode)"
      cidr_blocks      = ["0.0.0.0/0"]
      ipv6_cidr_blocks = var.ipv6_dualstack ? ["::/0"] : null
      from_port        = ingress.value
      to_port          = ingress.value
    }
  }

  dynamic "egress" {
    for_each = var.allow_egress_ports
    content {
      protocol         = "-1"
      description      = "Rule generated by dynamic terraform (simple mode)"
      cidr_blocks      = ["0.0.0.0/0"]
      ipv6_cidr_blocks = var.ipv6_dualstack ? ["::/0"] : null
      from_port        = egress.value
      to_port          = egress.value
    }
  }

  #============== Advanced rules IPv4 =================

  dynamic "ingress" {
    for_each = var.ingress_rules_advanced
    content {
      protocol         = ingress.value.protocol
      description      = ingress.value.description
      cidr_blocks      = ingress.value.v4_cidr_blocks
      ipv6_cidr_blocks = var.ipv6_dualstack ? ingress.value.v6_cidr_blocks : null
      from_port        = ingress.value.port
      to_port          = ingress.value.port
    }
  }

  dynamic "egress" {
    for_each = var.egress_rules_advanced
    content {
      protocol         = egress.value.protocol
      description      = egress.value.description
      cidr_blocks      = egress.value.v4_cidr_blocks
      ipv6_cidr_blocks = var.ipv6_dualstack ? ingress.value.v6_cidr_blocks : null
      from_port        = egress.value.port
      to_port          = egress.value.port
    }
  }
}